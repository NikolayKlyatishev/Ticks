	Руководство по Hibernate. Архитектура.
	
Hibernate создаёт связь между таблицами в базе данных (далее – БД) и Java-классами и наоборот.

	+----------+	+---------------+	+-----+
	|	JAVA-  |	|				|	|	  |
	|  		   |<==>|   Hibernate	|<=>|СУРБД|
	|  объекты |	| 				|	|	  |
	+----------+	+---------------+	+-----+

Hibernate даем следующие преимущества:

	- Обеспечивает простой API для записи и получения Java-объектов в/из БД.
	- Минимизирует доступ к БД, используя стратегии fetching.
	- Не требует сервера приложения.
	- Позволяет нам не работать с типами данных языка SQL, а иметь дело с привычыми нам типами данных Java.
	- Заботится о создании связей между Java-классами и таблицами БД с помощью XML-файлов не внося изменения в программный код.
	- Если нам неоходимо изменить БД, то достаточно лишь внести изменения в XML-файлы.
	
Саи HIBERNATE состоит из следущих компонентов:

1. Transaction - единица работы с БД. Такие единица обрабатывается менеджером транзакций.
2. SessionFactory - Самый важный и самый тяжелый объект (создается в единственном экземпляре для каждой БД при запуске приложения.) Конфигурируется отдельным конфигурационным файлом.
3. Session - сессия, которая используется для получение физического соединения с БД. Можно сказать, что создание, чтение, изменение и удаление объектов происходит через объект Session.
4. Query - Этот объект использует HQL или SQL для чтения/записи данных из/в БД. Экземпляр запроса используется для связыания парметров запроса, ограничения количества результатов, которые будут возвращены и для выполнения запроса.
5. Configuration - Этот объект используется для создания объекта SessionFactory и конфигурирует сам Hibernate с помощью конифигурационного XML-файла, который объясняет, как обрабатывать объект Session.
6. Criteria - Используется для создания и выполнения объекто-ориентированных запросов для получения объектов.

