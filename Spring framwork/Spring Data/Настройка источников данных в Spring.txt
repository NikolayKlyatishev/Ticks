	+-----------------------------------+
	|НАСТРОЙКА ИСТОЧНИКА ДАННЫХ В SPRING|
	+-----------------------------------+
Spring предлагает несколько вариантов настройки компонентов источников данных в приложении:

1. Источники данных, определяемые драйвером JDBC
2. Источники данных, найденные посредством JNDI
3. Источники данных, полученные из пулов соединений.

	+-----------------------------------+
	|ПОЛУЧЕНИЕ ИСТОЧНИКОВ ДАННЫХ ИЗ JNDI|
	+-----------------------------------+
В Spring можно настроить ссылку на источнк данных, хранимый в JNDI и внедрять ее в классы, как обычный бин. Элемент <jee:jndi-lookup> из пространства имен jee позволяет получить из JNDI любой объект. Пример:

<jee:jndi-lookup id="dataSource"
	 jndi-name="/jdbc/SpitterDS"
	 resource-ref="true" />
	 
Атрибут jndi-name определяет имя ресурса в JNDI. Если определен только атрибут jndi-name, будет выполнен поиск источника данных по указанному имени. Если приложение выполняется внутри сервера приложений Java, тогда можно дополнительно присвоить атрибуту resource-ref значение true, благодаря чему имя в атрибуте jndi-name будет дополнено слева приставкой java:comp/env/.

	+------------------------------+
	|ИСПОЛЬЗОВАНИЕ ПУЛОВ СОЕДИНЕНИЙ|
	+------------------------------+
На момент выхода spring 3, spring не имел собственных пулов соединений. Поэтому используем пул из проекта Jakarta Commons Database Connection Pooling (DBCP) (http://jakarta.apache.org/commons/dbcp). Проект DBCP включает несколько источников данных, предоставляющих пулы соединений, но обычно используется класс BasicDataSource, из-за его простой настройки и т.к. он напоминает класс DriverManagerDataSource в Spring.

Настройка BasicDataSource:
<bean id="dataSource" сlass="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
	<property name="url" value="jdbc:hsqldb:hsql://localhost/spitter/spitter" />
	<property name="username" value="sa" />
	<property name="password" value="" />
	<property name="initialSize" value="5" />
	<property name="maxActive" value="10" />
</bean>

Четыре основных свойства определяющие сведения о подключении для BasicDataSource.

	driverClassName - полное имя класса драйвера JDBC
	url - полный url JNDI
	username - имя пользователя для аутентификации
	password - пароль пользователя для идентификации

Помимо этих 4 свойств, есть другие которые могут быть использованя для настройки самого пула соединений.	
	
	initialSize - Начальное число соединений при создании пула.
	maxActive - Максимально допустимое число одновременно открытых активных соединений. Значение 0 соответствует неограниченному числу соединений.
	maxIdle - Максимально допустимое число простаивающих соединений, которые не будут закрыты. Значение 0 соответствует неограниченному числу соединений.
	maxOpenPreparedStatements - Максимально допустимое количество скомпилированных запросов, которые могут быть помещены в пул запросов одновременно. Значение 0 соответствует неограниченному числу запросов.
	maxWait - Время ожидания пулом возврата соединения в пул (при отсутствии свободных соединений) до возбуждения исключения. Значение –1 соответствует бесконечному ожиданию.
	minEvictableIdleTimeMillis - Максимальное время простоя соединения, прежде чем оно может быть удалено из пула.
	minIdle - Минимальное число простаивающих соединений, которые могут оставаться в пуле без создания новых соединений.
	poolPreparedStatements - Признак поддержки пула скомпилированных.

	+--------------------+
	|ИСТОЧНИК ДАННЫХ JDBC|
	+--------------------+

Простейшие источники данных, которые только можно настроить - те, которые определены использованием JDBC. Spring предлагает на выбор 2 класса таких источников:
	1. DriverManagerDataSource - при запросе соединения возвращает новое соединение. Соединения не объединяются в пул.
	2. SingleConnection - при запросе соединения возвращает одно и то же соединения. Такой класс нельзя назвать полноценным пулом соединений, но можно считать ичточником данных с 1 соединением.
		
Настройка любого из источников похожа на настройку BasicDataSource в DBCP за исключением настройки пула соединений, т.к. его просто нет:
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost/spitter/spitter" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	

	

	
	



