
Бин - Любой компонент, управляемый контейнером.

Пример описание Бина xml:

        <bean name="myBean" class="ru.javastudy.spring.beans.MyBean"></bean>        // задается каталог для сканирования на наличие бинов

        <bean id="beanName" class="ClassName" scope="prototype">                    // Параметр scope* - параметр, управляющий областю действия бина
            <constructor-arg ref="client"/>                                         // В качестве параметра передает другой бин
            <constructor-arg type="java.lang.String" value="value param"/>          // В качестве параметры передаем String
        </bean>  

Пример описание бина Java:

        @Configuration
        @ComponentScan(value = "system")            // задается каталог для сканирования на наличие бинов
        public class ConfigurationClass {

            @Bean
            @Scope(value = "session")               // Параметр scope* - параметр, управляющий областю действия бина
            public IUserable getUser() {
                return new User();
            }

        }


*   scope бывает след. видов:

        singleton — может быть создан только один экземпляр бина. Этот тип используется спрингом по умолчанию, если не указано другое. Следует осторожно использовать публичные свойства класса, т.к. они не будут потокобезопасными.
        prototype — создается новый экземпляр при каждом запросе.
        request —  аналогичен prototype, но название служит пояснением к использованию бина в веб приложении. Создается новый экземпляр при каждом HTTP request.
        session — новый бин создается в контейнере при каждой новой HTTP сессии.
        global-session: используется для создания глобальных бинов на уровне сессии для Portlet  приложени

    ** 
