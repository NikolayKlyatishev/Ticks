    ///////////////////// MVC ////////////////////

MVC - шаблон, используемый для построению веб-приложений. Главный принцип MVC шаблона состоит в определении ответсвенности каждого из компонентов. Шаблон MVC состоит из Model, View, Controller.

Model - бизнес данные, состояние приложения. Например в веб-мазазине Model будет представлена некоторая структура, содержащая информацию о профиле пользователя, корзина покупателя, история покупок и т.п.

View - представление. Отображает данные Model пользователю в удобном для него виде. Обеспецивает взаимодействие с пользователями, валидацию, интренационализацию, офомление стилями и т.п.

Controller - обрабатывает запросы с клиента, обновляет Model в соответсвии с запросами пользователей. 


Общий распространенный шаблон работы MVC приложения:

1. Запрос к серверу - Запрос отправляется на сервер, где его обычно, ожидает диспетчер (построенный на основе технологии Servlet). 
2. Диспетчер формирует запрос соответсвующему контроллеру на основе информации HTTP-запроса и конфигурации веб-приложения.
3. Вызов службы (service) - Контроллер взаимодействует с уровнем обслуживания, где собрана логика работы приложения.
4. Ответ (Responce) - Контроллер обновляет модель и в зависимости результата выполнения, возвращает польщователю соответствующее представление.

Возможности Ajax-запросов.
При применении java-script, view может прослушивать события или действия, выполняемые пользователем, а затем отправить запрос XMLHttpRequest серверу. На стороне контроллера вместо возврата целоно представления производится возврат низкоуровневых данных (xml или json), после чего осуществляется частичное обновление представления срендствами javaScript.

1. Запрос. Запрос XMLHttpRequest подготавливается и отправляется серверу. диспетчер же отправит щапрос соответствующему контроллеру.
2. Ответ. Контроллер взаимодействует с service. Данные ответа будут свормированы и отправлены клиенту в брайзер, где их сможет обработать java-script код....

