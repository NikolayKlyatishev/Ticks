Порядок составления REST 

1.	Создаем контроллер.
		Помечаем, что это контроллер, мапим, разрешаем использовать аннотации webmvc.
		
		добавляем метод, который должен обрабатывать конкретный запрос от клиента, мапим его.
		Определяем тип запроса, который должен обрабатывать наш метод.
		реализуем логику метода, возвращаем результат.

2.  Создаем страницу jsp, которую будем возвращать клиенту и заполнять данными.

3. Конфигурируем класс при помощи аннотаций, определяем бины, которые нужно загрузить.
	
	Обязательным бином является UrlBasedViewResolver - реализация интерфейса ViewResolver. Когда метод в классе контроллера перенаправляется на страницу, это помогает узнать фактический путь к файлу. Работает для jsp (наверно!!!)
	
		1. Создаем новый объект Urlbasedviewresolver 
		2. добавляем префикс со значением, возвращаемым методом контроллера. 
		3. добавляем суффикс со значением, возвращаемым методом контроллера. 
		4. задаем класс представления типа JstlView.класс
		5. Возвращамем созданный объект Urlbasedviewresolver.

4. Инициализация контекста спринг-веб.

Создаем класс Инициализатор. Он должен реализовывать интерфейс WebApplicationInitializer.
	класс имеет единственный метод, принимающий контекст сервлета, задача которого - воднять веб контекст приложения.
	Для этого нужно%:
	
		1. Создать контекст на основе аннотаций - AnnotationConfigWebApplicationContext и передать в него конфигурационный класс.
		2. Добавить в контекст сервлета слушателя ContextLoaderListener, созданный из контекста веб приложения.
		3. передаем в контекст веб приложения наш контекст сервлета.
		4. объявляем ServletRegistration.Dynamic сервлет, передаем его имя и экземпляр Диспетчера сервлета, созданного в контексте нашегго веб-приложения
		5. Мапим нащ сервлет
		6. Загружаем и запускаем.
		

	
