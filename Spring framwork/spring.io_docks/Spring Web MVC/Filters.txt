FILTERS - фильтры

	Модуль spring-web предоставляет некоторые полезные фильтры:
	
	- Form Data (данные формы)
	- Forwarded Headers (пересылка заголовков)
	- Shallow ETag
	- CORS 
	
FORM DATA - данные формы

	Браузер может отправить данные формы только используя технологии HTTP-POST HTTP-GET, но небраузерные клиенты могут использовать так же HTTP PUT, PATCH, and DELETE. Servlet API требует использовать метод ServletRequest.getParameter*() для поддержки доступа к полю формы только для HTTP-POST запросов.
	
	Модуль spring-web предоставляет FormContentFilter для перехвата HTTP-запросов PUT, PATCH и DELETE с типом контента application/x-www-form-urlencoded, считывания данных формы из тела запроса и обертывания ServletRequest, чтобы сделать данные формы доступными через семейство методов ServletRequest.getParameter*(). 

FORWARDED HEADERS - Пересылаемые Заголовки.

	По мере прохождения запроса через прокси-серверы (например, подсистемы балансировки нагрузки) узел, порт и схема могут изменяться, что затрудняет создание ссылок, указывающих на правильный узел, порт и схему с точки зрения клиента.
	
	Спецификация RFC 7239 определяет пересылаемый HTTP заголовок, который прокси-серверы могут использовать для предоставления информации об исходном запросе. Есть и другие нестандартные заголовки, включая X-Forwarded-Host, X-Forwarded-Port, X-Forwarded-Proto, X-Forwarded-Ssl и X-Forwarded-Prefix.
	
	ForwardedHeaderFilter-это фильтр сервлетов, который изменяет хост, порт и схему запроса на основе пересылаемых заголовков, а затем удаляет эти заголовки.
	
	Существуют соображения безопасности для пересылаемых заголовков, так как приложение не может знать, кем были добавлены заголовки, прокси-сервером, или вредоносным клиентом. Вот почему прокси-сервер  должен быть настроен для удаления ненадежных пересылаемых заголовков, которые поступают извне. Вы также можете настроить ForwardedHeaderFilter с removeOnly=true, в этом случае он удаляет, но не использует заголовки.
	
SHALLOW ETag
	см доку.