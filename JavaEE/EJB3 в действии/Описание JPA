	
	Описание JPA
	
		JPA - технология, обеспечивающая объектно-реляционное отображение POJO и предоставляющая API для получения и управления такими объектами. Спецификация JPA является частью спецификации EJB3. Сама JPA ничего не умеет делать сама, а лишь описывает принцип работы провайдеров. JPA описывает интерфейсы, которые должны быть реализованы. Так же в спецификации JPA описываются метаданные отображения и порядок работы провайдеров. В итоге провайдер, реализуя интерфейсы JPA, обеспечивает получение, сохранение и управление объектами с применением ORM. ORM - процесс отображения полей Java-объектов в таблицы базы данных, опреляемый при помощи конфигурационных файлов или аннотаций. Существует несколько реализация ORM, реализующих интерфейсы JPA: Hibernate, Oracle TopLink, Apache OpenJPA.
		
		JPA состоит из 3 основных частей:
			1. API - интерфейсы пакета javax.persistance - набор интерфейсов, которые позволяют организовывать взаимодействие с провайдером.
			2. JPQL - объектный язык запросов. Отличие от sql заключается в том, что запросы sql строятся к таблицам и их колонкам, а в JPQL запросы строятся к именам классов и их атрибутам. В качестве параметров запросов используется типы данных атрибутов.
			3. Metadata - аннотации над объектами. Анализирую установленные над объектами аннотации JPA поймет какой объект в какую таблицу нужно сохранить. Описание метаданные можно при помощи xml и при помощи аннотаций.
		
		Одной из основных целей JPA - предоставление универсального механизм хранения данных для любых приложений на Java.
	
	Сущности
		Сущности (entities) – это Java-объекты, хранимые в базе данных, объектно-ориентированные представления прикладных данных, хранимых в базе данных. Если сеансовые компоненты являются «глаголами» системы, то сущности – это «существительные». Типичными примерами могут служить сущности, такие как Employee (Служащий), User (Пользователь) или Item (Элемент).
		
		Метаданные ORM определяют, как объекты отображаются в базу данных.
		
	Аннотации: